_ = require('lodash')

export ometa OData2AbstractSQL {

	Process =
		PathSegment:query
		end
		-> query
	,
	PathSegment =
		:path
		(	?_.isEmpty(path)
			-> []
		|	?path.resource
			Resource(path.resource):resource
			{[['From', resource.resourceName]]}:query
			(	?path.property
				Resource(path.property.resource):propertyResource
				PathSegment(path.property):childQuery
				{query.concat(childQuery)}:query
				-> query.push(['Where', ['Equals', ['ReferencedField', propertyResource.resourceName, propertyResource.idField], ['ReferencedField', resource.resourceName, propertyResource.resourceName]]])
			|	?path.link
				Resource(path.link.resource):linkResource
				{['ReferencedField', resource.resourceName, linkResource.resourceName]}:referencedField
				(	?path.link.key
					-> query.push(['Where', ['Equals', referencedField, ['Number', path.key]]])
				)?
				-> query.push(['Select', referencedField])
			|	-> query.push(['Select', [resource.resourceName, '*']])
			)
			(	?(!path.options)
			|	(	?(!path.options.$filterby)
				|	Boolean(path.options.$filterby):filter
					-> query.push(['Where', filter])
				)
			)
			(	?path.key
				-> query.push(['Where', ['Equals', ['ReferencedField', resource.resourceName, resource.idField], ['Number', path.key]]])
			)?
			-> query
		)
	,

	Resource :resourceName =
			?this.clientModel.resources[resourceName]
			-> this.clientModel.resources[resourceName]
		|	{throw 'Unknown resource: ' + resourceName}
	,

	Boolean =
			[	(	'eq'
					-> 'Equals'
				|	'ne'
					-> 'NotEquals'
				|	'gt'
					-> 'GreaterThan'
				|	'ge'
					-> 'GreaterThanOrEqual'
				|	'lt'
					-> 'LessThan'
				|	'le'
					-> 'LessThanOrEqual'
				):operation
				Operand:op1
				Operand:op2
			|	(	'and'
					-> 'And'
				|	'or'
					-> 'Or'
				):operation
				Boolean:op1
				Boolean:op2
			]
			-> [operation, op1, op2]
		|	[	'not'
				Boolean:bool
			]
			-> ['Not', bool]
		|	Property
	,

	Operand =
			Boolean
		|	Number
		|	Text
	,

	Property =
		:prop
		?prop.name
		-> ['Field', prop.name]
	,

	Number =
		number:num
		-> ['Number', num]
	,

	Text =
		string:text
		-> ['Text', text]
}